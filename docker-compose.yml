version: '3'
services:
  traefik:
    image: 'traefik:v3.0'
    command:
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--certificatesresolvers.myresolver.acme.dnschallenge=true'
      - '--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.myresolver.acme.email=${LE_ACME_EMAIL}'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json' 
    ports:
      - '80:80'
      - '443:443'
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './letsencrypt:/letsencrypt'
    networks:
      - web
        
  api:
    build: .
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.api.loadbalancer.server.port=8080'
      - 'traefik.http.routers.api.rule=Host(`${API_DOMAIN}`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.tls.certresolver=myresolver'
    environment:
      APP_ENV: 'production'
      PORT: '8080'
      DB_URL: ${DB_URL}
    networks:
      - web

networks:
  web:
