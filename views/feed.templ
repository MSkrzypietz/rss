package views

import (
    "github.com/MSkrzypietz/rss/views/components"
	"github.com/MSkrzypietz/rss/internal/database"
	"strconv"
)

type FeedPageState struct {
    ActivePage components.ActivePage
    Posts []database.GetUnreadPostsForUserRow
}

templ feed(posts []database.GetUnreadPostsForUserRow) {
    for _, post := range posts {
        {{ postID := strconv.Itoa(int(post.ID)) }}
        <a id={"card-" + postID} href={ templ.URL(post.Url) } target="_blank">
            <div class="bg-[#262626] m-3 p-6">
                <div class="flex">
                    <div class="flex-grow text-2xl font-bold mb-2">{ post.Title }</div>
                    <button
                        hx-post={"posts/" + postID + "/read"}
                        hx-target={"#card-" + postID}
                        hx-swap="outerHTML"
                        onclick="event.stopPropagation(); event.preventDefault()"
                        class="bg-stone-950 rounded h-10 px-4 py-2 z-10"
                        >Read</button>
                </div>
                <div>{ post.Description.String }</div>
                <div class="mt-2">{ post.PublishedAt.Time.Format("02.01.2006 15:04:05") } - { post.FeedName }</div>
            </div>
        </a>
    }
}

templ FeedPage(state FeedPageState) {
    @components.Layout(feed(state.Posts), state.ActivePage)
}
